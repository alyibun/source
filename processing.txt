float rot=0;
float a=10;
float th=PI/a*2;
float x=50;
float y=100;
float z=50;
float[][] point = new float[20][3];

void setup(){
  size(400,400,P3D);
  noStroke();
  for(int i=0;i<a;i++){
    int b=-1;
    point[i][0]=x*cos(th*i);
    point[i][1]=y;
    point[i][2]=z*sin(th*i);
    y*=b;
  }
}
void quad(float px1,float px2,
          float py1,float py2,
          float pz1,float pz2){
  vertex(px1,py1,pz1);
  vertex(px2,py1,pz2);
  vertex(px1,py2,pz1);
  vertex(px2,py1,pz2);
  vertex(px1,py2,pz1);
  vertex(px2,py2,pz2);
}
void draw(){
  background(100);
  lights();
  translate(width/2,height/2);
  beginCamera();
  camera(0,0,300,0,0,0,0,1,0);
  rotateX(-PI/6);
  endCamera();
  rotateY(rot);
  beginShape(TRIANGLES);
  for(int i=0;i<a;i++){
    if(i==a-1){
      quad(point[i][0],point[0][0],
           point[i][1],point[0][1],
           point[i][2],point[0][2]);
    }
    else{
    quad(point[i][0],point[i+1][0],
         point[i][1],point[i+1][1],
         point[i][2],point[i+1][2]);
    }
  }
  endShape();
  rot+=PI/180;
}